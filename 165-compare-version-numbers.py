
class Solution:
    def compareVersion(self, version1: str, version2: str) -> int:
        v1 = version1.split('.')
        v2 = version2.split('.')
        for i, val in enumerate(v1):
            start = 0
            while start < len(val)-1 and val[start] == '0':
                start += 1
            v1[i] = val[start:]

        for i, val in enumerate(v2):
            start = 0
            while start < len(val)-1 and val[start] == '0':
                start += 1
            v2[i] = val[start:]

        if len(v1) > len(v2):
            v2.extend(['0']*(len(v1)-len(v2)))
        elif len(v2) > len(v1):
            v1.extend(['0']*(len(v2)-len(v1)))

        val1 = int(''.join(v1))
        val2 = int(''.join(v2))
        if val1 > val2:
            return 1
        if val1 == val2:
            return 0
        return -1

s = Solution()

data = [
    ['0.1', '0.1.0.0'],
    ['1.0.1', '1'],
    ['7.5.2.4', '7.3'],
    ['1.1', '1.01'],
    ["19.8.3.17.5.01.0.0.4.0.0.0.0.0.0.0.0.0.0.0.0.0.00.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000",
    "19.8.3.17.5.01.0.0.4.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0000.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.000000"]
]

for d in data:
    print(s.compareVersion(*d))

